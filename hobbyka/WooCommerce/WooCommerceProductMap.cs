using CsvHelper.Configuration;

namespace hobbyka.WooCommerce;

public sealed class WooCommerceMap : ClassMap<WooCommerceRecord>
{
    public WooCommerceMap()
    {
        Map(m => m.ID).Name("ID");
        Map(m => m.Тип).Name("Тип");
        Map(m => m.Артикул).Name("Артикул");
        Map(m => m.GTIN_UPC_EAN_ISBN).Name("GTIN, UPC, EAN или ISBN");
        Map(m => m.Имя).Name("Имя");
        Map(m => m.Опубликован).Name("Опубликован");
        Map(m => m.Рекомендуемый).Name("Рекомендуемый?");
        Map(m => m.Видимость_в_каталоге).Name("Видимость в каталоге");
        Map(m => m.Краткое_описание).Name("Краткое описание"); // TODO
        Map(m => m.Описание).Name("Описание"); // TODO
        Map(m => m.Дата_начала_действия_скидки).Name("Дата начала действия скидки");
        Map(m => m.Дата_окончания_действия_скидки).Name("Дата окончания действия скидки");
        Map(m => m.Статус_налога).Name("Статус налога");
        Map(m => m.Налоговый_класс).Name("Налоговый класс");
        Map(m => m.Наличие).Name("Наличие");
        Map(m => m.Запасы).Name("Запасы");
        Map(m => m.Величина_малых_запасов).Name("Величина малых запасов");
        Map(m => m.Возможен_ли_предзаказ).Name("Возможен ли предзаказ?");
        Map(m => m.Продано_индивидуально).Name("Продано индивидуально?");
        Map(m => m.Вес_кг).Name("Вес (кг)");
        Map(m => m.Длина_см).Name("Длина (см)");
        Map(m => m.Ширина_см).Name("Ширина (см)");
        Map(m => m.Высота_см).Name("Высота (см)");
        Map(m => m.Разрешить_отзывы).Name("Разрешить отзывы?");
        Map(m => m.Примечание_к_покупке).Name("Примечание к покупке");
        Map(m => m.Акционная_цена).Name("Акционная цена");
        Map(m => m.Базовая_цена).Name("Базовая цена");
        Map(m => m.Категории).Name("Категории");
        Map(m => m.Метки).Name("Метки");
        Map(m => m.Класс_доставки).Name("Класс доставки");
        Map(m => m.Изображения).Name("Изображения");
        Map(m => m.Лимит_скачивания).Name("Лимит скачивания");
        Map(m => m.Дней_срока_скачивания).Name("Дней срока скачивания");
        Map(m => m.Родительский).Name("Родительский");
        Map(m => m.Сгруппированные_товары).Name("Сгруппированные товары");
        Map(m => m.Апсэлы).Name("Апсэлы");
        Map(m => m.Кросселы).Name("Кросселы");
        Map(m => m.Внешний_URL).Name("Внешний URL");
        Map(m => m.Текст_кнопки).Name("Текст кнопки");
        Map(m => m.Позиция).Name("Позиция");
        Map(m => m.Swatches_Attributes).Name("Swatches Attributes");
        Map(m => m.Бренды).Name("Бренды");
        Map(m => m.Название_атрибута_1).Name("Название атрибута 1");
        Map(m => m.Значения_атрибутов_1).Name("Значения атрибутов 1");
        Map(m => m.Видимость_атрибута_1).Name("Видимость атрибута 1");
        Map(m => m.Глобальный_атрибут_1).Name("Глобальный атрибут 1");
        Map(m => m.Название_атрибута_2).Name("Название атрибута 2");
        Map(m => m.Значения_атрибутов_2).Name("Значения атрибутов 2");
        Map(m => m.Видимость_атрибута_2).Name("Видимость атрибута 2");
        Map(m => m.Глобальный_атрибут_2).Name("Глобальный атрибут 2");
        Map(m => m.Название_атрибута_3).Name("Название атрибута 3");
        Map(m => m.Значения_атрибутов_3).Name("Значения атрибутов 3");
        Map(m => m.Видимость_атрибута_3).Name("Видимость атрибута 3");
        Map(m => m.Глобальный_атрибут_3).Name("Глобальный атрибут 3");
        Map(m => m.Атрибут_1_по_умолчанию).Name("Атрибут 1 по умолчанию");
    }
}